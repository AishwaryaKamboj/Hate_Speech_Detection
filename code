import pandas as pd
import numpy as np
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import CountVectorizer

from google.colab import drive
drive.mount('/content/drive')
import nltk
nltk.download('stopwords')
import re
from nltk.util import pr
stemmer = nltk.SnowballStemmer("english")
from nltk.corpus import stopwords
import string
stopword = set(stopwords.words("english"))
df = pd.read_csv("/content/twitter_data - twitter_data.csv")
df.head(4)
df['labels'] = df['class'].map({0:"Hate Speech Detected ",1:"Offensive Language detected",2: "No Hate Speech detected"})
print(df.head())
df = df[['tweet','labels']]
df.head()
def clean(text):
   text = str(text).lower()
   text = re.sub('\[.*?\]', '',text)
   text = re.sub('https?;//\S+|www\.\S+','',text)
   text = re.sub('<.*?>+','',text)
   text = re.sub('[%s]' % re.escape(string.punctuation),'',text)
   text = re.sub('\n','',text)
   text = re.sub('\w*\d\w*','',text)
   text = [word for word in text.split() if word not in stopword]
   text = " ".join(text)
   text = [stemmer.stem(word) for word in text.split()]
   text =" ".join(text)
   return text
df["tweet"] = df["tweet"].apply(clean)
print(df.head())
x = np.array(df["tweet"])
  y = np.array(df["labels"])
  cv = CountVectorizer()
  x = cv.fit_transform(x)
  X_train ,X_test,Y_train ,Y_test = train_test_split(x,y,test_size=0.33,random_state=42)
  ml = DecisionTreeClassifier()
  ml.fit(X_train,Y_train)
test_data ="Good Day";
df = cv.transform([test_data]).toarray()
print(ml.predict(df))
